@model eRoute.Models.FilterModel
<div id="HeaderEvaluation" class="w-100pr">
    @*CTTB*@
    <div class="item fl">
        <label for="display" class="fl">@Utility.Phrase("DisplayName")</label>
        <div class="input-group">
            @Html.Hidden("DisplayID")
            @Html.TextBox("DisplayCode", Model.Display, new { @class = "form-control", @placeholder = Utility.Phrase("SelectDisplayName")  })
            <div class="input-group-btn">
                <button type="button" id="btndisplay" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span></button>
                <ul class="dropdown-menu">
                    <li>
                        <div style="height: 400px; overflow-y: auto; overflow-x: auto;" class="table-box wrapper">
                            <table class="table table-striped nowrap m-0">
                                <thead class="block-theme">
                                    <tr>
                                        <th>@Utility.Phrase("No")</th>
                                        <th>@Utility.Phrase("DisplayName")</th>
                                        @*<th>@Utility.Phrase("Description") </th>*@
                                        <th>@Utility.Phrase("TimeDisplay")</th>
                                    </tr>
                                </thead>
                                <tbody id="my_table_Display">
                                    @if (Model.DisplayData != null)
                                    {
                                        foreach (var item in Model.DisplayData)
                                        {
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.STT)</td>
                                            <td style="display: none;">@Html.DisplayFor(modelItem => item.MaCTTB)</td>
                                            <td>@Html.DisplayFor(modelItem => item.ChuongTrinhTrungBay)</td>
                                            <td style="display: none;">@Html.DisplayFor(modelItem => item.MoTa)</td>
                                            <td>@Html.DisplayFor(modelItem => item.ThoiGianTrungBay)</td>
                                            <td style="display: none;">@Html.DisplayFor(modelItem => item.ThoiGianBatDau)</td>
                                            <td style="display: none;">@Html.DisplayFor(modelItem => item.ThoiGianKetThuc)</td>
                                        </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    @*Ma Danh Gia*@
    <div class="item fl">
        <label for="code" class="fl">@Utility.Phrase("EvaluationCode")</label>
        <div class="input-group">
            @Html.TextBox("EvaluationCode", Model.EvaluationID, new { @class = "form-control", @placeholder = Utility.Phrase("SelectEvaluationCode")  })
            <div class="input-group-btn">
                <button type="button" id="btncode" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span></button>
                <ul class="dropdown-menu">
                    <li>
                        <div style="height: auto; overflow-y: auto; overflow-x: auto;" class="table-box wrapper">
                            <table class="table table-striped nowrap m-0">
                                <thead class="block-theme">
                                    <tr>
                                        <th>@Utility.Phrase("No")</th>
                                        <th>@Utility.Phrase("DisplayName")</th>
                                        <th>@Utility.Phrase("EvaluationCode")</th>
                                        <th>@Utility.Phrase("TimeDisplay")</th>
                                        <th>@Utility.Phrase("EvaluationStatus")</th>
                                    </tr>
                                </thead>
                                <tbody id="my_table_EvaluationID">
                                    @if (Model.EvaluationData != null)
                                    {
                                        int i = 1;
                                        foreach (var item in Model.EvaluationData)
                                        {
                                        <tr>
                                            <td>@i</td>
                                            <td>@item.ProgramName</td>
                                            <td>@item.EvaluationID</td>
                                            <td>@item.EvalDateFrom.ToShortDateString() - @item.EvalDateTo.ToShortDateString()</td>
                                            <td><span class="@item.ColorStatus bold">@Utility.Phrase("EvalState_" + item.EvalState)</span></td>
                                            <td style="display: none">@item.EvalState</td>
                                        </tr>
                                            i++;
                                        }   
                                    }
                                </tbody>
                            </table>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    @*Trang Thai*@
    <div class="item fl">
        <label id="labelEvalState">@Utility.Phrase("Status")</label>
        <div class="input-group">
            @Html.DropDownList("EvalState", Model.listStatus)
        </div>
    </div>
    <div id="box-filter" class="active-show">
        @*Noi Dung*@
        <div class="item fl">
            <label>@Utility.Phrase("Content")</label>
            <div class="input-group">
                @Html.TextBox("EvalContent", Model.Content)
            </div>
        </div>
        @*Thoi Gian Trung Bay*@
        <div class="item fl">
            <label id="lbtimeDisplay" class="fl">@Utility.Phrase("TimeDisplay")</label>
            <div class="nowrap fl">
                @Html.TextBox("DispFromDate", (Model.DisplayFromDate != null) ? Model.DisplayFromDate.Value.ToString(Utility.info.DateTimeFormat.ShortDatePattern) : "", new { @class = "datepicker" })
                @Html.TextBox("DispToDate", (Model.DisplayToDate != null) ? Model.DisplayToDate.Value.ToString(Utility.info.DateTimeFormat.ShortDatePattern) : "", new { @class = "datepicker" })
            </div>
        </div>
        <div class="item fl">
        </div>
        @*Mo Ta*@
        <div class="item fl">
            <label class="fl">@Utility.Phrase("Description")</label>
            <div class="input-group">
                @Html.TextBox("EvalDesc", Model.Description)
            </div>
        </div>
        @*Thoi Gian Danh Gia*@
        <div class="item fl">
            <label id="lbtimeEvaluation" class="fl">@Utility.Phrase("TimeEvaluation")</label>
            <div class="nowrap fl">
                @Html.TextBox("EvalFromDate", (Model.EvalFromDate != null) ? Model.EvalFromDate.Value.ToString(Utility.info.DateTimeFormat.ShortDatePattern) : "", new { @class = "datepicker" })
                @Html.TextBox("EvalToDate", (Model.EvalToDate != null) ? Model.EvalToDate.Value.ToString(Utility.info.DateTimeFormat.ShortDatePattern) : "", new { @class = "datepicker" })
            </div>
        </div>
        <div class="item fl">
        </div>
        @*Ma Tham Chieu*@
        <div class="item fl">
            <label class="fl">@Utility.Phrase("ReferenceCode")</label>
            <div class="input-group">
                @Html.TextBox("RefNumber", Model.Description, new { @name = "NameofRefEvaluation", @placeholder =  Utility.Phrase("SelectReferenceCode"), @onchange ="LoadItemListByRefNumber()"})
            </div>
        </div>
    </div>
    @*Button*@
    <div class="item fl">
        <button type="button" id="addFilter"><i class="icon-up"></i>@Utility.Phrase("AddFilter")</button>
        <button class="btn-search" id="btnsearch" title="@Utility.Phrase("Search")"><i class="icon-search"></i>@Utility.Phrase("Search")</button>
    </div>
</div>
<script type="text/javascript">
    $('#addFilter').on('click', function () {
        if ($('#box-filter').hasClass("active-show")) {
            $('#box-filter').removeClass("active-show");

        } else {
            $('#box-filter').addClass("active-show");
        }
    });

</script>