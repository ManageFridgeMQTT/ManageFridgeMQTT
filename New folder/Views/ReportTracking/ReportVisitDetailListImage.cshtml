@model ReportVisitGallery
@using System.Web.UI.WebControls;
@{
    ViewBag.Title = Utility.Phrase("ReportVisitByGallery");
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}
<div class="insider">
    <div id="loading" class="loading"></div>
    @using (Html.BeginForm("ReportVisit", "ReportTracking", FormMethod.Post))
    {
        @Html.Hidden("act")
        <div class="row display-table w-100pr mb-10 content-header">
            <div class="report-content-header">
                <div class="col-sm-8">
                    <h1>@Utility.Phrase("ReportVisit")</h1>
                </div>
            </div>
            <div class="w-100pr">
                <div class="item fl">
                    <label for="display" class="fl">@Utility.Phrase("DisplayName")</label>
                    <div class="input-group">
                        @{
                                    string RouteID = "";
                                    string strFromDate = "";
                                    if (Model.ListHeader.Count > 0)
                                    {
                                        RouteID = Model.ListHeader[0].RouteID;
                                        strFromDate = Model.ListHeader[0].CapturedDate.Date.ToString();
                                    }
                        }
                        @Html.Hidden("DisplayID")
                        @Html.Hidden("Route",RouteID)
                        @Html.Hidden("strFromDate",strFromDate)
                        @Html.TextBox("DisplayCode", Model.Display, new { @class = "form-control", @placeholder = Utility.Phrase("SelectDisplayName") })
                        <div class="input-group-btn">
                            <button type="button" id="btndisplay" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span></button>
                            <ul class="dropdown-menu">
                                <li>
                                    <div style="height: 400px; overflow-y: auto; overflow-x: auto;" class="table-box wrapper w-103pr">
                                        <table class="table table-striped nowrap m-0">
                                            <thead class="block-theme">
                                                <tr>
                                                    <th>@Utility.Phrase("No")</th>
                                                    <th>@Utility.Phrase("DisplayName")</th>
                                                    @*<th>@Utility.Phrase("Description") </th>*@
                                                    <th>@Utility.Phrase("TimeEvaluation")</th>
                                                </tr>
                                            </thead>
                                            <tbody id="my_table_Display">
                                                @if (Model.DisplayData != null)
                                    {
                                        foreach (var item in Model.DisplayData)
                                        {
                                                    <tr>
                                                        <td>@Html.DisplayFor(modelItem => item.STT)</td>
                                                        <td style="display: none;">@Html.DisplayFor(modelItem => item.MaCTTB)</td>
                                                        <td>@Html.DisplayFor(modelItem => item.ChuongTrinhTrungBay)</td>
                                                        <td style="display: none;">@Html.DisplayFor(modelItem => item.MoTa)</td>
                                                        <td>@Html.DisplayFor(modelItem => item.ThoiGianTrungBay)</td>
                                                        <td style="display: none;">@Html.DisplayFor(modelItem => item.ThoiGianBatDau)</td>
                                                        <td style="display: none;">@Html.DisplayFor(modelItem => item.ThoiGianKetThuc)</td>
                                                    </tr>
                                        }
                                    }
                                            </tbody>
                                        </table>
                                    </div>
                                </li>
                            </ul>

                        </div>
                    </div>
                </div>


                <div class="item fl">
                    <button id="Search" type="button"><i class="icon-progress"></i>@Utility.Phrase("View")</button>
                      <a href="@Url.Action("ReportVisit", "ReportTracking")">
                                <button type="button" title="@Utility.Phrase("Back")"><i class="icon-back"></i>@Utility.Phrase("Back")</button>
                            </a>                       
                  
                </div>


            </div>
        </div>       
    }
    <div class="row content-body">
        <div class="col-md-6">
            <div class="table-box">
                <table>
                    <thead class="block-theme">
                        <tr>
                            <th colspan="4">@Utility.Phrase("Summary")</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>                            
                            <th>@Utility.Phrase("Date"):</th>
                            <td class="align-right"> @( Model.ListHeader.Count == 0 ? "" :  Model.ListHeader[0].CapturedDate.Date.ToShortDateString()) </td>
                              <th>@Utility.Phrase("TotalOutletInRoute"):</th>
                             <td class="align-right">@(Model.ListHeader.Count == 0 ? "0" : String.Format("{0:n0}", Model.ListHeader[0].TotalOutlet)) </td>
                        </tr>
                        <tr>
                            <th>@Utility.Phrase("DateViewReport"):</th>
                            <td class="align-right">@DateTime.Now</td>
                              <th>@Utility.Phrase("TotalOutletVisited"):</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "0" : String.Format("{0:n0}",Model.ListHeader[0].TotalOutletVisited) )  </td>
                        </tr>
                        <tr>
                            <th>@Utility.Phrase("Route"):</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "" : Model.ListHeader[0].RouteID + "-" + Model.ListHeader[0].RouteName ) </td>
                             <th>@Utility.Phrase("TotalOutletOutofRange"):</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "0" : String.Format("{0:n0}",Model.ListHeader[0].TotalOutletOutofRange))</td>
                        </tr>
                        <tr>
                            <th>@Utility.Phrase("Saleman"):</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "" : Model.ListHeader[0].SalesmanID + "-" + Model.ListHeader[0].SalesmanName +"-" +  Model.ListHeader[0].Phone )    </td>
                             <th>@Utility.Phrase("TotalOrder"):</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "0" : String.Format("{0:n0}",Model.ListHeader[0].TotalOrder)) </td>
                        </tr>
                        <tr>
                            <th>@Utility.Phrase("Distributor"):</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "" :  Model.ListHeader[0].DistributorName)  </td>
                             <th>@Utility.Phrase("TotalQty"):</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "0" : String.Format("{0:n0}", Model.ListHeader[0].TotalQty) )  </td>
                        </tr>
                        <tr>
                            <th>@Utility.Phrase("SaleSup")</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "" : Model.ListHeader[0].SaleSupID +"-"+ Model.ListHeader[0].SaleSupName) </td>
                             <th>@Utility.Phrase("TotalSKU"):</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "0" :  String.Format("{0:n0}", Model.ListHeader[0].TotalSKU))  </td>
                        </tr>
                        <tr>
                            <th>@Utility.Phrase("ASM")</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "" : Model.ListHeader[0].ASMID + "-" + Model.ListHeader[0].ASM)  </td>
                             <th>@Utility.Phrase("LPPC"):</th>
                            <td class="align-right">@(Model.ListHeader.Count == 0 ? "0" : String.Format("{0:n0}", Model.ListHeader[0].LPPC.Value))</td>
                        </tr>
                         <tr>
                             <th></th>
                             <td></td>
                            <th>@Utility.Phrase("TotalAmt"):</th>
                            <td class="align-right">@( Model.ListHeader.Count == 0 ? "0" :  String.Format("{0:n0}", Model.ListHeader[0].TotalAmt))</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>     
         <div class="col-md-12">
        <div id="tableBox" class="tab-content wrapper">
            <div id="report-summary" class="tab-pane fade in active box-table-ressult">
                <div class="row">
                    <div class="col-md-9 list-image-box">
                        @if (Model.ListImageBy != null)
            {
                int numberRow = Model.ListImageBy.Count / 6;
                for (int i = 0; i < (numberRow + 1); i++)
                {
                    int index = i * 6;
                    int count = 6;
                    if ((Model.ListImageBy.Count - index) < 6)
                    {
                        count = Model.ListImageBy.Count - index;
                    }
                        
                            <div class="row">
                                @foreach (var image in Model.ListImageBy.GetRange(index, count))
                    {
                                    <div class="col-sm-2">
                                        <div class="item-image-box">
                                            <h3>@image.CustomerName</h3>
                                            <div class="square-bsox">
                                                <a href="@Url.Action("DetailImages", "Evaluation", new { @sEvalID = Model.Evaluation.EvaluationID, @customerID = image.CustomerID, @imageID = image.CustomerImageID})">
                                                    <img src="@(Constant.SalesOrdersImageFolder + image.ImageFileName)" />
                                                </a>
                                            </div>
                                            <div class="item-detail-img">
                                                <p><span><b>@Utility.Phrase("DisplayName")</b>: </span>@image.ProgramName</p>
                                                <p><span><b>@Utility.Phrase("EvaluationCode")</b>: </span>@image.EvaluationID</p>

                                                <p><span><b>@Utility.Phrase("Salesman")</b>: </span>@image.SalesmanName</p>
                                                <p><span><b>@Utility.Phrase("DateTake")</b>: </span>@image.CapturedDate.ToShortDateString()</p>
                                                <p>
                                                    <span><b>@Utility.Phrase("Img_Des")</b>: </span>
                                                    @{
                                                    if (image.isCaptured == null)
                                                    {
                                                        @(Utility.Phrase("Img_NotMark"))
                                                    }
                                                    else
                                                    { 
                                                        @( image.isCaptured.Value ? Utility.Phrase("Img_isTrue") : Utility.Phrase("Img_isFakes") + ", " +                                                 (image.isAccepted.Value ? Utility.Phrase("Img_isAccepted") : Utility.Phrase("Img_notAccepted")))                                         
                                                    }    
                                                    }

                                                </p>
                                                <p><span><b>@Utility.Phrase("Img_Marker")</b>: </span>@image.CreatedByID</p>
                                            </div>
                                        </div>
                                    </div>
                    }
                            </div>
                }

            }
                    </div>
                </div>

            </div>

        </div>
             </div>
    </div>
</div>


<script type='text/javascript'>
    $(document).ready(function () {
        $('#Search').click(function () {

            $('form').submit();
            $(".loading").show();

        });







    });

</script>
