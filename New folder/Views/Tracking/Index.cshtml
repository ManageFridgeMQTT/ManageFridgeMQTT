@model HomeVM
@using DevExpress.Web.Mvc.UI;
@using DevExpress.Web.Mvc;
@using System.Web.UI.WebControls;
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&amp;sensor=false"></script>
<script type="text/javascript" src="@Url.Content("~/Content/THP/tooltip.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/THP/is_number_key.js")"></script>
<script src="@Url.Content("~/Content/THP/markerwithlabel_packed.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/THP/markerclusterer_packed.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/THP/styledmarker.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/THP/infobox_packed.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/THP/keydragzoom.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/THP/common.js")" type="text/javascript"></script>
<script type="text/javascript" src="@Url.Content("~/Content/THP/initgmap.js")"></script>
<style type="text/css">
    html, body
    {
        height: 100%;
    }
    .tbIndex tr
    {
        line-height: 24px;
    }
</style>
<div class="content" style="height: 100%; overflow: hidden;">
    <a href="#" class="arrowleft" title="Bản đồ"></a>
    <form id="mapfrm" name="mapfrm" action="@Url.Action("Index", "Tracking")" enctype="application/x-www-form-urlencoded" method="post"
    target="_blank" style="height: 100%">
    <div class="left" style="overflow: auto;">
        <div class="box-left">
            <div class="heading active">
                <span>Bản đồ: </span>
                <div class="clear">
                </div>
            </div>
            <ul class="nav-left">
                <li>
                    <h3>
                        Lọc thông tin
                    </h3>
                    <div style="margin: 5px;">
                        <table class="tbIndex" cellpadding="3px">
                            <tbody>
                                <tr>
                                    <td>
                                        <label for="sales">
                                            Ngày:
                                        </label>
                                    </td>
                                    <td>
                                        <span class="alignright"><strong>
                                            <input type="text" name="txt_date" id="txt_date" value="@Model.strDate" style="width: 100px" />
                                        </strong></span>
                                    </td>
                                </tr>
                                @if (Model.listDis.Count > 0)
                                {
                                    <tr>
                                        <td>
                                            Vùng :
                                        </td>
                                        <td>
                                            <span class="alignright">
                                                @Html.DevExpress().ComboBox(
                                                settings =>
                                                {
                                                    settings.Name = "RegionID";
                                                    settings.Width = Unit.Pixel(250);
                                                    settings.CallbackRouteValues = new { Controller = "Tracking", Action = "ComboBoxPartialRegion" };
                                                    settings.Properties.CallbackPageSize = 50;
                                                    settings.Properties.DropDownRows = 15;
                                                    settings.Properties.AllowMouseWheel = true;
                                                    settings.Properties.TextFormatString = "{0}-{1}";
                                                    settings.Properties.ValueField = "RegionID";
                                                    settings.Properties.ValueType = typeof(string);
                                                    settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                                                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                                                    settings.Properties.Columns.Add("RegionID", Utility.Phrase("RegionID"), 110);
                                                    settings.Properties.Columns.Add("Name", Utility.Phrase("RegionName"), 200);
                                                    settings.Properties.Height = Unit.Pixel(20);


                                                    settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { AreaID.PerformCallback(); DistributorID.PerformCallback(); }";
                                                    settings.PreRender = (sender, e) =>
                                                    {
                                                        MVCxComboBox cmb = sender as MVCxComboBox;
                                                        if (string.IsNullOrEmpty(Model.regionID))
                                                        {
                                                            cmb.Value = Model.regionID;
                                                        }
                                                    };
                                                }
                                            ).BindList(Model.ListRegion).Bind(Model.regionID).GetHtml()
                                            </span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Khu vực :
                                        </td>
                                        <td>
                                            <span class="alignright">@Html.DevExpress().ComboBox(
                                                settings =>
                                                {
                                                    settings.Name = "AreaID";
                                                    settings.Width = Unit.Pixel(250);
                                                    settings.CallbackRouteValues = new { Controller = "Tracking", Action = "ComboBoxPartialArea" };
                                                    settings.Properties.CallbackPageSize = 50;
                                                    settings.Properties.DropDownRows = 15;
                                                    settings.Properties.AllowMouseWheel = true;
                                                    settings.Properties.TextFormatString = "{0}-{1}";
                                                    settings.Properties.ValueField = "AreaID";
                                                    settings.Properties.ValueType = typeof(string);
                                                    settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                                                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                                                    settings.Properties.Columns.Add("AreaID", Utility.Phrase("AreaID"), 110);
                                                    settings.Properties.Columns.Add("Name", Utility.Phrase("AreaName"), 200);
                                                    settings.Properties.Height = Unit.Pixel(20);

                                                    settings.PreRender = (sender, e) =>
                                                    {
                                                        MVCxComboBox cmb = sender as MVCxComboBox;
                                                        if (string.IsNullOrEmpty(Model.areaID))
                                                        {
                                                            cmb.Value = Model.areaID;
                                                        }
                                                    };

                                                    settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { DistributorID.PerformCallback(); }";
                                                    settings.Properties.EnableCallbackMode = true;
                                                    settings.Properties.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['RegionID'] = RegionID.GetValue(); }";
                                                }
                                            ).BindList(Model.ListArea).Bind(Model.areaID).GetHtml()
                                            </span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Nhà PP :
                                        </td>
                                        <td>
                                            <span class="alignright">
                                                <label for="sales">
                                                    <input type="hidden" id="branch" name="branch" />
                                                    @Html.DevExpress().ComboBox(
                                                    settings =>
                                                    {
                                                        settings.Name = "DistributorID";
                                                        settings.Width = Unit.Pixel(250);
                                                        settings.SelectedIndex = 0;
                                                        settings.CallbackRouteValues = new { Controller = "Tracking", Action = "ComboBoxPartialDistributor" };
                                                        settings.Properties.CallbackPageSize = 50;
                                                        settings.Properties.DropDownRows = 15;
                                                        settings.Properties.AllowMouseWheel = true;
                                                        settings.Properties.ClientSideEvents.Init = "function(s, e) { $('#strDistributorID').val(s.GetValue());LoadSalesmanByDistributor();}";
                                                        settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { $('#strDistributorID').val(s.GetValue());LoadSalesmanByDistributor();}";
                                                        settings.Properties.TextFormatString = "{1}-{0}";
                                                        settings.Properties.ValueField = "DistributorID";
                                                        settings.Properties.ValueType = typeof(int);
                                                        settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                                                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                                                        settings.Properties.Columns.Add("DistributorCode", Utility.Phrase("DistributorCode"), 110);
                                                        settings.Properties.Columns.Add("DistributorName", Utility.Phrase("DistributorName"), 200);
                                                        settings.Properties.EnableCallbackMode = true;
                                                        settings.Properties.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['RegionID'] = RegionID.GetValue(); e.customArgs['AreaID'] = AreaID.GetValue();}";
                                                    }
                             ).BindList(Model.listDis).GetHtml()
                                                </label>
                                            </span>
                                        </td>
                                        <td>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="clear">
                    </div>
                </li>
                <li>
                    <h3>
                        Nhân viên bán hàng
                    </h3>
                    <div id="listSalesman" style="height: 250px; overflow: auto;">
                        @if (Model.listSaleman.Count > 0)
                        {
                            <table class="dsr">
                                <tbody>
                                    <tr>
                                        <td>
                                            <input type="checkbox" name="ChkAll" relgroup="dsr" style="margin-left: 22px" />
                                        </td>
                                        <td>
                                            <label for="dsr">
                                                <strong>Check All</strong>
                                            </label>
                                        </td>
                                    </tr>
                                    @foreach (Map_Salesman item in Model.listSaleman)
                                    {
                                        <tr>
                                            <td>
                                                <div class="colorbox" list="dsr" code="@item.SalesmanID">
                                                </div>
                                                <input type="checkbox" name="dsr" group="dsr" value="@item.SalesmanID" alt="(@item.SalesmanID) @item.SalesmanName" />
                                                <div class="clear">
                                                </div>
                                            </td>
                                            <td>
                                                (<strong>@item.SalesmanID</strong>) @item.SalesmanName
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <script type="text/javascript">
                                $("input[group=dsr]").first().attr('checked', 'checked');
                            </script>
                        }
                        else
                        {
                            <table class="dsr">
                                <tbody>
                                    <tr>
                                        <td>
                                            < There is no DSR >
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        }
                        <br />
                    </div>
                    <div class="clear">
                    </div>
                </li>
                <li style="display: none">
                    <input type="text" name="txt_salesman" id="txt_salesman" style="width: 100px" />
                    <input type="checkbox" name="autozoom" id="autozoom" group="autozoom" value="1" />
                </li>
            </ul>
        </div>
        <div class="buttons">
            <div style="padding-left: 5px;" id="divLog">
                Thời gian cập nhật: @Model.strDate <strong id='hour'>@Model.strHour</strong>
            </div>
            <table style="text-align: center;">
                <tr style="text-align: center;">
                    <td style="text-align: center;">
                        <input type="button" name="apply" class="button process" value="@Utility.Phrase("View") VT NVBH" onclick="filterRefresh();" />
                    </td>
                    <td style="text-align: center;">
                        <input type="button" name="refresh" class="button process" value="Cập nhật DL"
                            onclick="filterSelection()" />
                    </td>
                </tr>
                <tr style="text-align: center;">
                    <td style="text-align: center;">
                        <input type="button" name="saleLocation" class="button" value="NVBH" onclick="focusSalesman()" />
                    </td>
                    <td style="text-align: center;">
                        <input type="button" name="lastOulet" class="button" value="Cửa hàng ghé thăm cuối"
                            onclick="focusLastOutlet()" />
                    </td>
                </tr>
            </table>
        </div>
        <div class="box-left" style="text-align: center;">
            <ul class="nav-left" style="text-align: left; background-color: white;">
                <li>
                    <h3>
                        Báo cáo</h3>
                    <div style="text-align: left; padding-left: 50px;">
                        <select id="report" name="report" style="margin-top: 5px; margin-bottom: 5px;">
                            @if (PermissionHelper.CheckPermissionByFeature("Home_Report"))
                            {
                                <option value="sales" selected="selected">Báo cáo viếng thăm</option>
                            }
                            @if (PermissionHelper.CheckPermissionByFeature("Home_ReportWithImage"))
                            {
                                <option value="ReportWithImage">Báo cáo viếng thăm kèm hình ảnh</option>
                            }
                            @if (PermissionHelper.CheckPermissionByFeature("Home_ReportSync"))
                            {
                                <option value="synchronization">Báo cáo đồng bộ đầu ngày</option>
                            }
                            @if (PermissionHelper.CheckPermissionByFeature("Home_ReportDistributor"))
                            {
                                <option value="salesdistributor">Báo cáo bán hàng</option>
                            }
                            @if (PermissionHelper.CheckPermissionByFeature("Home_ReportAttendance"))
                            {
                                <option value="attendance">Báo cáo chấm công</option>
                            }
                            @if (PermissionHelper.CheckPermissionByFeature("Home_OutletList"))
                            { 
                                <option value="outlet">Danh sách Outlet chưa có tọa độ</option>
                            }
@*@if (PermissionHelper.CheckPermissionByFeature("Home_ReportSalemanKPI"))
                            { 
                                <option value="ReportSalemanKPI">Báo cáo Tuân thủ - Chấm công</option>
                            }*@
                            @if (PermissionHelper.CheckPermissionByFeature("Home_SalesForceMCPTracking"))
                            { 
                                <option value="SalesForceMCPTracking">SalesForce MCP Tracking</option>
                            }
                            @if (PermissionHelper.CheckPermissionByFeature("Home_OutletLocationUpdate"))
                            { 
                                <option value="OutletLocationUpdate">Cập nhật tọa độ Outlet</option>
                            }
                            @if (PermissionHelper.CheckPermissionByFeature("Home_ReportWorkWith"))
                            { 
                                <option value="ReportWorkWith">Báo cáo Work With</option>
                            }
                            @if (PermissionHelper.CheckPermissionByFeature("Home_ReportTotalOrderOfDay"))
                            { 
                                <option value="ReportTotalOrderOfDay">Báo cáo PC</option>
                            }
                            @if (PermissionHelper.CheckPermissionByFeature("Home_ReportReviewWorkWith"))
                            { 
                                <option value="ReportReviewWorkWith">Báo cáo đánh giá Work With</option>
                            }
                        </select>
                        <br clear="all" />
                        <input type="button" name="button-report" class="button" value='@Utility.Phrase("View") báo cáo' onclick="Report()" />
                        <br clear="all" />
                        <div id="divTest">
                        </div>
                    </div>
                </li>
            </ul>
        </div>
        <br clear="all" />
        <br clear="all" />
        <br clear="all" />
    </div>
    <div class="right">
        <div class="map">
            <div class="showfilter" onclick="$('.arrowleft').click()">
                Map Search</div>
            <div id='map_control'>
            </div>
            <div id="gmap_canvas" style="width: 100%; height: 100%; background-color: #fff !important;
                display: block">
            </div>
        </div>
        <div class="list-search" style="position: relative; z-index: 99999">
            <div class="loading" obj="map">
                <div class="status">
                </div>
                <div class="progressbar">
                </div>
            </div>
            <h3>
                <ul class="menu">
                    <li><span onclick="showInfo();">Thông tin nhân viên</span>
                        <ul>
                            <img type="button" src='@Url.Content("~/Images/closeIcon.jpg")' width="15px";height="15px";  style="float:right;" onclick="CloseInfo();" ></img>
                            <li>
                                <div id="divSalesmanInfo" style="text-align: left;">
                                    <p>
                                        Ngày bán hàng: <span id="smtxt_date"></span>
                                    </p>
                                    <p>
                                        Tuyến bán hàng: <span id="smRouteID"></span>
                                    </p>
                                    <p>
                                        Nhân viên phụ trách: <span id="smSalesmanID"></span>
                                    </p>
                                    <p>
                                        Số KH trên tuyến: <span id="smcountOutlet"></span>
                                    </p>
                                    <p>
                                        Số KH đã ghé thăm: <span id="smcountOutletVisited"></span>
                                    </p>
                                    <p>
                                        Số KH có đơn hàng: <span id="smcountOutletHaveOrder"></span>
                                    </p>
                                    <p>
                                        Số đơn hàng: <span id="smcountOrder"></span>
                                    </p>
                                    <p>
                                        Tổng SKU: <span id="smtotalSKU"></span>
                                    </p>
                                    <p>
                                        LPPC: <span id="smtotalSKUperCount"></span>
                                    </p>
                                    <p>
                                        Tổng doanh số: <span id="smtotalAMT"></span>
                                    </p>
                                    <p>
                                        Sản lượng(Két/thùng): <span id="smtotalQuantity"></span>
                                    </p>
                                </div>
                            </li>
                        </ul>
                    </li>
                </ul>
            </h3>
            <div class="result" style="display: none">
                <div class="loading" obj="table">
                    <div class="status">
                    </div>
                    <div class="progressbar">
                    </div>
                </div>
                <table style="table-layout: fixed; width: 100%">
                    <tbody>
                        <colgroup span="12">
                        </colgroup>
                        <tr>
                            <th width='40'>
                                Order
                            </th>
                            <th width='80'>
                                DSR
                            </th>
                            <th width='80'>
                                Customer
                            </th>
                            <th width='200'>
                                Site
                            </th>
                            <th width='80'>
                                Segment
                            </th>
                            <th width='80'>
                                Class ID
                            </th>
                            <th width='80'>
                                Route
                            </th>
                            <th width='80' style="text-align: center">
                                mtd
                            </th>
                            <th width='80' style="text-align: center">
                                lm
                            </th>
                            <th width='80' style="text-align: center">
                                p3m
                            </th>
                            <th width='80' style="text-align: center">
                                p6m
                            </th>
                            <th width='80' style="text-align: center">
                                p12m
                            </th>
                            <th style="text-align: center">
                            </th>
                        </tr>
                    </tbody>
                </table>
                <div class="resultinner">
                    <table id="resulttable" style="table-layout: fixed; width: 100%">
                        <tbody>
                            <colgroup span="12">
                            </colgroup>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    </form>
</div>
<script type="text/javascript">
    var logedin = 0;
    var base_url = '@Request.Url.AbsoluteUri';
    $(document).ready(function () {
        $('body').css('overflow', 'hidden');
        $("#txt_date").datepicker({
            maxDate: 0,
            dateFormat: 'dd-mm-yy'
        }).change(function () {
            LoadSalesmanByDistributor();
        });

        LoadSalesmanByDistributor();

        //Hide button when begin processing
        $('input[type="button"]').click(function () {
            hideButton();
        });

        pgmap.init({ showLabels: $("#chkLabels").is(":checked") });
        //vietmap.init();
        if ($.isFunction("CheckMarkerWithLabels"))
            CheckMarkerWithLabels();
        if ($('#messages .message').length > 0) {
            setTimeout(function () { $('#messages .message').fadeOut(1000, function () { $(this).remove(); }); }, 3000);
        }
        $("input[type=checkbox]:checked").removeAttr("checked");
    });

    function CheckSession() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("CheckSession", "Tracking")',
            success: function (data) {
                if (data != null) {
                    if (data.Authenticated == 1) {
                        logedin = data.Authenticated;
                        return 1;
                    }
                    else {
                        alert("Phiên sử dụng của bạn đã hết hạn. Vui lòng đăng nhập để sử dụng chương trình. Cảm ơn!");
                        location.href = '@Url.Action("Login", "Account")' + '?returnUrl=' + document.URL;
                        return 0;
                    }
                }
                else {
                    alert("Phiên sử dụng của bạn đã hết hạn. Vui lòng đăng nhập để sử dụng chương trình. Cảm ơn!");
                    location.href = '@Url.Action("Login", "Account")' + '?returnUrl=' + document.URL;
                    return 0;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Phiên sử dụng của bạn đã hết hạn. Vui lòng đăng nhập để sử dụng chương trình. Cảm ơn!");
                location.href = '@Url.Action("Login", "Account")' + '?returnUrl=' + document.URL;
                return 0;
            }
        });
        return 0;
    }

    function getMap() {
        return pgmap;
    }

    function Report() {
        if ($('#report').val() === "synchronization") {
            var totalCheckedItems = $('#strDistributorID').val();
            if (totalCheckedItems <= 0) {
                alert("Please check Distributor");
            }
            else {
                var strDsr = '';
                $("input[type=checkbox][group=" + "dsr" + "]:checked").each(function () {
                    strDsr += $(this).val() + ',';
                });

                if ($('#txt_salesman').val() != '') {
                    window.open('@Url.Action("ReportSync", "Tracking")' + '?branch=' + $('#strDistributorID').val() + '&txt_date=' + $('#txt_date').val() + '&strDsr=' + strDsr);
                }
                else {
                    window.open('@Url.Action("ReportSync", "Tracking")' + '?branch=' + $('#strDistributorID').val() + '&txt_date=' + $('#txt_date').val() + '&strDsr=' + strDsr);
                }
            }
        }

        else if ($('#report').val() === "sales") {
            var totalCheckedItems = $("input[type=checkbox][group=" + "dsr" + "]:checked").length;
            if (totalCheckedItems <= 0) {
                alert("Please check salesman");
            }
            else {
                var strDsr = '';
                $("input[type=checkbox][group=" + "dsr" + "]:checked").each(function () {
                    strDsr += $(this).val() + ',';
                });

                if ($('#txt_salesman').val() != '') {
                    window.open('@Url.Action("Report", "Tracking")' + '?branch=' + $('#strDistributorID').val() + '&txt_date=' + $('#txt_date').val() + '&txt_salesman=' + $('#txt_salesman').val() + '&strDsr=' + strDsr);
                }
                else {
                    window.open('@Url.Action("Report", "Tracking")' + '?branch=' + $('#strDistributorID').val() + '&txt_date=' + $('#txt_date').val() + '&txt_salesman=' + $("input[type=checkbox][group=" + "dsr" + "]:checked").first().val() + '&strDsr=' + strDsr);
                }
            }
        }
        else if ($('#report').val() === "ReportWithImage") {
            var totalCheckedItems = $("input[type=checkbox][group=" + "dsr" + "]:checked").length;
            if (totalCheckedItems <= 0) {
                alert("Please check salesman");
            }
            else {
                var strDsr = '';
                $("input[type=checkbox][group=" + "dsr" + "]:checked").each(function () {
                    strDsr += $(this).val() + ',';
                });

                if ($('#txt_salesman').val() != '') {
                    window.open('@Url.Action("ReportWithImage", "Tracking")' + '?branch=' + $('#strDistributorID').val() + '&txt_date=' + $('#txt_date').val() + '&txt_salesman=' + $('#txt_salesman').val() + '&strDsr=' + strDsr);
                }
                else {
                    window.open('@Url.Action("ReportWithImage", "Tracking")' + '?branch=' + $('#strDistributorID').val() + '&txt_date=' + $('#txt_date').val() + '&txt_salesman=' + $("input[type=checkbox][group=" + "dsr" + "]:checked").first().val() + '&strDsr=' + strDsr);
                }
            }
        }
        else if ($('#report').val() === "salesdistributor") {
            var strDsr = '';
            $("input[type=checkbox][group=" + "dsr" + "]:checked").each(function () {
                strDsr += $(this).val() + ',';
            });

            if ($('#txt_salesman').val() != '') {
                window.open('@Url.Action("ReportDistributor", "Tracking")' + '?branch=' + $('#strDistributorID').val() + '&txt_date=' + $('#txt_date').val() + '&strDsr=' + strDsr);
            }
            else {
                window.open('@Url.Action("ReportDistributor", "Tracking")' + '?branch=' + $('#strDistributorID').val() + '&txt_date=' + $('#txt_date').val() + '&strDsr=' + strDsr);
            }
        }
        else if ($('#report').val() === "attendance") {
            window.open('@Url.Action("ReportAttendance", "Tracking")'); // + '?DistributorID=' + $('#strDistributorID').val()
        }
        else if ($('#report').val() === "outlet") {
            window.open('@Url.Action("OutletList", "Tracking")');
        }
        else if ($('#report').val() === "ReportSalemanKPI") {
            window.open('@Url.Action("ReportSalemanKPI", "Tracking")');
        }
        else if ($('#report').val() === "SalesForceMCPTracking") {
            window.open('@Url.Action("SalesForceMCPTracking", "Tracking")');
        }
        else if ($('#report').val() === "SalesForceMCPTracking") {
            window.open('@Url.Action("SalesForceMCPTracking", "Tracking")');
        }
        else if ($('#report').val() === "OutletLocationUpdate") {
            window.open('@Url.Action("OutletLocationUpdate", "Tracking")');
        }
        else if ($('#report').val() === "ReportWorkWith") {
            window.open('@Url.Action("ReportWorkWith", "Tracking")');
        }
        else if ($('#report').val() === "ReportTotalOrderOfDay") {
            window.open('@Url.Action("ReportTotalOrderOfDay", "Tracking")');
        }
        else if ($('#report').val() === "ReportReviewWorkWith") {
            window.open('@Url.Action("ReportReviewWorkWith", "Tracking")');
        }
    }

    function LoadSalesmanInfo() {
        $.ajax({
            url: '@Url.Action("SalesmanInfo", "Tracking")',
            type: "post",
            data: $('#mapfrm').serialize(),
            success: function (data) {
                if (data != null) {
                    $('#smtxt_date').html(data.txt_date);
                    $('#smRouteID').html(data.RouteID + ' - ' + data.RouteName);
                    $('#smSalesmanID').html(data.SalesmanID + ' - ' + data.SalesmanName);
                    $('#smcountOutlet').html(data.countOutlet);
                    $('#smcountOutletVisited').html(data.countOutletVisited);
                    $('#smcountOutletHaveOrder').html(data.countOutletHaveOrder);
                    $('#smcountOrder').html(data.countOrder);
                    $('#smtotalSKU').html(data.totalSKU);
                    $('#smtotalSKUperCount').html(data.totalSKUperCount);
                    $('#smtotalAMT').html(data.totalAMT);
                    $('#smtotalQuantity').html(data.totalQuantity);
                }
                else {
                    alert('Không hợp lệ');
                }
            },
            error: function () {
            }
        });
    }

    function LoadSalesmanByDistributor() {
        CheckSession();

        //Clear div#listSalesman 
        $("div#listSalesman").html('');

        $.post('@Url.Action("DSRByBranch", "Tracking")', $('#mapfrm').serialize(), function (response) {
            $("div#listSalesman").html(response.html);
            $("div.colorbox[list=dsr]").each(function () {
                $(this).css("background-color", colors[$("div.colorbox[list=dsr]").index($(this))]);
            })

            //seg don't view when change DSM
            $("div[dynamic=seg]").html('<p>Please select Salemans to filter Outlet Type </p> <br/></br>');
            $("div[dynamic=cli]").html('<p>Please select Salemans to filter Outlet Channel</p> <br/></br>');
            $("div[dynamic=wkd]").html('<p>Please select Salemans to filter Weekday</p> <br/></br>');

            $("input[type=checkbox][relgroup=dsr][name=ChkAll]").click(function () {
                var groupname = $(this).attr("relgroup");
                if ($(this).is(":checked")) {
                    $("input[type=checkbox][group=" + groupname + "]").attr("checked", "checked");
                    $("label[for=" + groupname + "]").css("font-weight", "bold").text("Uncheck All");
                }
                else {
                    $("input[type=checkbox][group=" + groupname + "]").removeAttr("checked");
                    $("label[for=" + groupname + "]").css("font-weight", "bold").text("Check All");

                    if (groupname == "dsr")
                        $("div[dynamic=seg]").html('<p>Please select DSR to filter Segment</p> <br/></br>');
                    $("div[dynamic=cli]").html('<p>Please select Salemans to filter Outlet Channel</p> <br/></br>');
                    $("div[dynamic=wkd]").html('<p>Please select Salemans to filter Weekday</p> <br/></br>');
                }

            });

            $("input[type=checkbox][group=dsr]").click(function () {
                var groupname = $(this).attr("group");
                var totalItems = $("input[type=checkbox][group=" + groupname + "]").length;
                var totalCheckedItems = $("input[type=checkbox][group=" + groupname + "]:checked").length;

                if (totalItems == totalCheckedItems) {
                    $("input[type=checkbox][relgroup=" + groupname + "]").attr("checked", "checked");
                    $("label[for=" + groupname + "]").css("font-weight", "bold").text("Uncheck All");
                }
                else {
                    $("input[type=checkbox][relgroup=" + groupname + "]").removeAttr("checked");
                    $("label[for=" + groupname + "]").css("font-weight", "bold").text("Check All");
                }
            });

            //Refresh Map
            //filterRefresh();
        });
    }
    function showInfo() {
        $("ul.menu > li > ul").css('display', 'block');
    }
    function CloseInfo() {
        $("ul.menu > li > ul").css('display', 'none');
    }

    function showButton() {
        //$('input[type="button"].process').removeAttr('disabled');
    }

    function hideButton() {
        //$('input[type="button"].process').attr('disabled', 'disabled');
    }

    function LogTime(str) {
        //        var d1 = new Date();
        //        var newDate = d1.toString('h:m:i');
        //        $('#divTest').html($('#divTest').html() + '<br />' + str + ' : ' + newDate);
    }

    function redirectOnSessionTimeout(status) {
        if (status == "504") {
            location.href = Urls.SessionTimeout;
            alert("Phiên sử dụng của bạn đã hết hạn. Vui lòng đăng nhập để sử dụng chương trình. Cảm ơn!");
            location.href = '@Url.Action("Login", "Account")' + '?returnUrl=' + document.URL;
        }
    }
</script>
@*Test git*@