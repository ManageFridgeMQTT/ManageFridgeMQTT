@model HomeVM
@using DevExpress.Web.Mvc.UI;
@using DevExpress.Web.Mvc;
@using System.Web.UI.WebControls;
@{
    Layout = "";
}
<html>
<head>
    <title>@Utility.Phrase("SalesSupervisor_Title")</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="@Url.Content("~/MapTest/leaflet.css")" />
    <link rel="stylesheet" href="@Url.Content("~/MapTest/leaflet.iconlabel.css")" />
    <link rel="stylesheet" href="@Url.Content("~/MapTest/leaflet.label.css")" />
    <script type="text/javascript" src="@Url.Content("~/MapTest/leaflet.js")"></script>
    @*<script type="text/javascript" src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>    *@
    <!-- Leaflet MiniMap Plugins -->
    @*<script type="text/javascript" src="http://maps.google.com/maps/api/js?v=3.2&sensor=false"></script>*@
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&amp;sensor=false"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/leaflet-google.js")"></script>
    <!-- ### Leaflet MiniMap Plugins -->
    @*<script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>*@
    <script type="text/javascript" src="@Url.Content("~/MapTest/JqueryUI/jquery-1.10.2.js")"></script>
    <!-- Leaflet Element Label Plugins -->
    <script type="text/javascript" src="@Url.Content("~/MapTest/leaflet.iconlabel.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Label.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/BaseMarkerMethods.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Marker.Label.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/CircleMarker.Label.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Path.Label.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Map.Label.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/FeatureGroup.Label.js")"></script>
    <!-- ### Leaflet Element Label Plugins -->
    <!-- Leaflet MarkerCluster Plugins -->
    <link rel="stylesheet" href="@Url.Content("~/MapTest/MarkerCluster.css")" />
    <link rel="stylesheet" href="@Url.Content("~/MapTest/MarkerCluster.Default.css")" />
    <script type="text/javascript" src="@Url.Content("~/MapTest/leaflet.markercluster-src.js")"></script>
    <!-- ### Leaflet MarkerCluster Plugins -->
    <!-- Leaflet Awesome Markers Plugins -->
    <link rel="stylesheet" href="@Url.Content("~/MapTest/font-awesome.css")" />
    <link rel="stylesheet" href="@Url.Content("~/MapTest/leaflet.awesome-markers.css")"/>
    <script type="text/javascript" src="@Url.Content("~/MapTest/leaflet.awesome-markers.js")"></script>
    <!-- ### Leaflet MiniMap Plugins -->
    <!--DATA TEMP-->
    <script type="text/javascript" src="@Url.Content("~/MapTest/mines.js")"></script>
    <!-- Leaflet MiniMap Plugins -->
    <link rel="stylesheet" href="@Url.Content("~/MapTest/Control.MiniMap.css")" />
    <script  type="text/javascript"src="@Url.Content("~/MapTest/Control.MiniMap.js")"></script>
    <!-- ### Leaflet MiniMap Plugins -->
    <!-- Leaflet Routing Plugins -->
    <link rel="stylesheet" href="@Url.Content("~/MapTest/Routing/leaflet-routing-machine.css")" />
    <script type="text/javascript" src="@Url.Content("~/MapTest/Routing/leaflet-routing-machine.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Routing/L.Routing.OSRM.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Routing/L.Routing.Line.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Routing/L.Routing.Itinerary.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Routing/L.Routing.Plan.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Routing/L.Routing.Control.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Routing/Control.Geocoder.js")"></script>
    <!-- ### Leaflet Routing Plugins -->
    <!-- Leaflet SideBar Plugins -->
    <link rel="stylesheet" href="@Url.Content("~/MapTest/SideBar/L.Control.Sidebar.css")" />
    <script type="text/javascript" src="@Url.Content("~/MapTest/SideBar/L.Control.Sidebar.js")"></script>
    <!-- ### Leaflet SideBar Plugins -->
    <!-- Leaflet PolyLineText Plugins -->
    <script type="text/javascript" src="@Url.Content("~/MapTest/PolyLineText/leaflet.textpath.js")"></script>
    <!-- ### Leaflet PolyLineText Plugins -->
    <!-- Leaflet PolylineDecorator Plugins -->
    @*<script type="text/javascript" src="@Url.Content("~/MapTest/leaflet.polylineDecorator.js")"></script>*@
    <script type="text/javascript" src="@Url.Content("~/MapTest/PolylineDecorator/L.LineUtil.PolylineDecorator.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/PolylineDecorator/L.RotatedMarker.js")")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/PolylineDecorator/L.Symbol.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/PolylineDecorator/L.PolylineDecorator.js")"></script>
    <!-- ### Leaflet PolylineDecorator Plugins -->
    <!-- Leaflet Measure Distance Plugins -->
    <link rel="stylesheet" href="@Url.Content("~/MapTest/Distance/distance.css")" />
    <link rel="stylesheet" href="@Url.Content("~/MapTest/Distance/leaflet.draw.css")" />
    <script type="text/javascript" src="@Url.Content("~/MapTest/Distance/leaflet.draw.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/MapTest/Distance/Distance.js")"></script>
    <!-- ### Leaflet Measure Distance Plugins -->
    <!-- DateTime Picker -->
    @*<link href="@Url.Content("~/Content/THP/css/jquery-ui-1.8.17.css")" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Content/THP/js/jquery-ui-1.8.17.min.js")"></script>*@
    @*<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css">    
    <script src="http://code.jquery.com/ui/1.11.2/jquery-ui.js"></script>*@
    <link href="@Url.Content("~/MapTest/JqueryUI/jquery-ui.css")" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/MapTest/JqueryUI/jquery-ui.js")"></script>
    <!-- ### DateTime Picker -->
    <script type="text/javascript" src="@Url.Content("~/Content/THP/js/jquery.price_format.1.8.js")"></script>
    <!-- HighCharts -->
    <script src="@Url.Content("~/MapTest/HighCharts/highcharts.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/MapTest/HighCharts/modules/data.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/MapTest/HighCharts/modules/exporting.js")" type="text/javascript"></script>
    <!-- ### HighCharts -->
    <!-- Leaflet MiniMap Plugins -->
    <!-- ### Leaflet MiniMap Plugins -->
    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Editors },
        new StyleSheet { ExtensionSuite = ExtensionSuite.HtmlEditor },
        new StyleSheet { ExtensionSuite = ExtensionSuite.GridView },
        new StyleSheet { ExtensionSuite = ExtensionSuite.PivotGrid },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Chart },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Report },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Scheduler },
        new StyleSheet { ExtensionSuite = ExtensionSuite.TreeList }
    )
    @Html.DevExpress().GetScripts(
        new Script { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
        new Script { ExtensionSuite = ExtensionSuite.HtmlEditor },
        new Script { ExtensionSuite = ExtensionSuite.GridView },
        new Script { ExtensionSuite = ExtensionSuite.PivotGrid },
        new Script { ExtensionSuite = ExtensionSuite.Editors },
        new Script { ExtensionSuite = ExtensionSuite.Chart },
        new Script { ExtensionSuite = ExtensionSuite.Report },
        new Script { ExtensionSuite = ExtensionSuite.Scheduler },
        new Script { ExtensionSuite = ExtensionSuite.TreeList }
    )
    <style>
        body
        {
            padding: 0;
            margin: 0;
        }
        html, body, #map
        {
            height: 100%;
        }
        .placeMarks-label
        {
            -moz-box-shadow: none;
            -webkit-box-shadow: none;
            box-shadow: none;
            color: #fff;
            position: relative;
        }
        .alignleft
        {
            float: left;
        }
        .alignright
        {
            float: right;
        }
        
        .avata
        {
        }
        .details
        {
        }
        .details p
        {
            width: 250px;
        }
        .details p label
        {
            width: 100px;
        }
        .details span char
        {
            float: left;
        }
        .details span num
        {
            float: right;
        }
        #sidebar-left
        {
            overflow: hidden;
        }
        .loading
        {
            width: 100%;
            height: 100%;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 99999999999999999999;
            opacity: .3;
            background: url(/MapTest/images/loading.gif) no-repeat center #bbb;
            display: none;
        }
        .real-order
        {
            color: blue;
            font-family: "Lucida Grande" , "Arial" , sans-serif;
            font-size: 11px;
            font-weight: bold;
            font-style: italic;
            text-align: center;
            white-space: nowrap;
        }
        .labelmaps
        {
            color: blue;
            font-family: "Lucida Grande" , "Arial" , sans-serif;
            font-size: 10px;
            font-weight: bold;
            font-style: italic;
            text-align: center;
            white-space: nowrap;
        }
        .list-search
        {
            opacity: 0.8;
            z-index: 99999999;
            padding-left: 5px;
            @*line-height: 25px;
            border-bottom: 1px solid #fff;
            background: #5874F5;
            color: #fff;*@
            background: white;
            position: absolute;
            bottom: 0px;
            right: 0px;
            left: 460px;
            display: none;
        }
        .leaflet-popup-content
        {
            width:auto;
            margin: 14px 10px;    
        }
        
        .imghoverzoom
        {
            opacity:1;
            position:absolute;
            height:auto;
            width:auto;
            left:auto;
            top:auto;
            max-height:none;
            max-width:none;
            margin:0;
            padding:0;
            border-radius:0;
            background-size:100% 100%;
            background-position:center;
            background-repeat:no-repeat;
            overflow:hidden;
            z-index:2147483647;
        }
    </style>
</head>
<body>
    <div id="container">
        <div id="map">
        </div>
        <div class="list-search" style="z-index: 99999">
            <span>@Utility.Phrase("SalesSupervisor_AJAXReportSalesAssessment")</span>
            @*<img alt="" src="@Url.Content("~/Content/img/closeIcon.jpg")" width="15px" ;height="15px" style="float:right;" onclick="" />*@
            <div style="text-align: left; overflow: auto; max-height: 400px;" id="divVisitInfo">
            </div>
        </div>
        <div id="sidebar-left" style="overflow: auto;">
            <strong>@Utility.Phrase("SalesSupervisor_Filter")</strong>
            <br clear="all" />
        </div>
        <div id="sidebar-right">
            <h1>
                right sidebar</h1>
        </div>
        <script type='text/javascript'>
            ////DATA USE IN MAP
            var mapData = {};
            mapData.LayerMarkerOutlet = L.layerGroup();
            mapData.LayerLineOutlet = L.layerGroup();
            mapData.LatLongBounds = [];
            ////##DATA USE IN MAP

            ////INIT GOOGLE MAP
            var map = new L.Map('map', {
                center: [16, 106],
                zoom: 7,
                minZoom: 0,
                maxZoom: 23
            });
            var googleLayer = new L.Google('ROADMAP');
            map.addLayer(googleLayer);
            ////##INIT GOOGLE MAP

            $("#sidebar-left").resizable();
            
            ////MarkerCluster
            mapData.markers = new L.MarkerClusterGroup({ spiderfyOnMaxZoom: true, showCoverageOnHover: false, zoomToBoundsOnClick: true, disableClusteringAtZoom: 16 });
            ////##MarkerCluster

            ////Distance
            var d = new L.Control.Distance(); map.addControl(d);
            map.addControl(new L.Control.Scale());
            ////##Distance

            ////MINI MAP
            //Plugin magic goes here! Note that you cannot use the same layer object again, as that will confuse the two map controls
            //var osm2 = new L.TileLayer(osmUrl, {minZoom: 0, maxZoom: 13, attribution: osmAttrib });
            var osm2 = new L.Google('ROADMAP');

            var rect1 = { color: "#ff1100", weight: 3 };
            var rect2 = { color: "#0000AA", weight: 1, opacity: 0, fillOpacity: 0 };
            var miniMap = new L.Control.MiniMap(
                                osm2,
                                {
                                    toggleDisplay: true
                                    , aimingRectOptions: rect1
                                    , shadowRectOptions: rect2
                                    , width: 250
			                        , height: 250
                                }
                                ).addTo(map);
            ////##MINI MAP

            ////Sidebar
            var leftSidebar = L.control.sidebar('sidebar-left', {
                position: 'left'
            });
            map.addControl(leftSidebar);

            var rightSidebar = L.control.sidebar('sidebar-right', {
                position: 'right'
            });
            map.addControl(rightSidebar);
            leftSidebar.show();
            rightSidebar.hide();
            ////##Sidebar

            document.onkeypress = checkKey;
            function checkKey(e) {
                e = e || window.event;
                WriteLog(e.keyCode);
                //alert(e.keyCode);
                if (e.keyCode == 108) {
                    leftSidebar.show();
                }
                else if (e.keyCode == 114) {
                    rightSidebar.show();
                }
            }
            
            function arrayPush(arA, arB) {
                if (arB != null) {
                    var n = arB.length;
                    for (var i = 0; i < n; i++) {
                        arB.push(arB[i]);
                    }
                }
            }

            function MapPanToAndZoom(latlng, zoom) {
                if (mapData.LatLongBounds.length > 0) {
                    var bounds = new L.LatLngBounds(mapData.LatLongBounds);
                    map.fitBounds(bounds);
                }
            }

            function MapSetZoom(latlng, zoom) {
                map.setView(latlng, zoom);
            }

            function RenderPolyline(latlngs, strLabel, strInfo, color, layer) {
                if (latlngs == null || latlngs.length < 2) {
                    return 0;
                }

                polylineMCP = L.polyline(latlngs, { color: color });
                polyLineArrow = L.polylineDecorator(latlngs, {
                    patterns: [
                    { offset: 1, repeat: 100, symbol: L.Symbol.arrowHead({ pixelSize: 15, pathOptions: { color: color, fillOpacity: 0.6, weight: 0} }) }
                ]
                });

                if (strLabel != '') {
                    polylineMCP.bindLabel(strLabel, { noHide: true });
                }
                if (strInfo != '') {
                    polylineMCP.bindPopup(strInfo);
                }

                if (layer != null) {
                    layer.addLayer(polylineMCP);
                    layer.addLayer(polyLineArrow);
                    if (layer == mapData.LayerLineOutletSMSSASM) {
                        map.addLayer(layer);
                    }
                }

                return polylineMCP;
            }

            function RenderMarker(latlng, number, label, popup, icon, layer1, layer2) {
                if (latlng[0] != 0) {
                    mapData.LatLongBounds.push(latlng);
                }

                var marker = L.marker(latlng, {
                    icon: new placeMarker_double({
                        labelText: number
                    , labelAnchor: new L.Point(labelTextAnchor(number), -1)
                    , iconUrl: '../Content/THP/markers/' + icon + '.png'
                    })
                })

                if (label != '') {
                    marker.bindLabel(label, { noHide: false })
                }
                if (popup != '') {
                    marker.bindPopup(popup, { noHide: false });
                }

                if (layer1 != null) {
                    layer1.addLayer(marker);
                }
                if (layer2 != null) {
                    layer2.addLayer(marker);
                }

                return marker;
            }

            function RenderMarker(latlng, number, label, popup, icon, layer1, layer2, labelNoHide) {
                if (latlng[0] != 0) {
                    mapData.LatLongBounds.push(latlng);
                }
                var iconURL = '../Content/THP/markers/' + icon + '.png';
                var marker = L.marker(latlng, {
                    icon: new placeMarker_double({
                        labelText: number
                    , labelAnchor: new L.Point(labelTextAnchor(number), -1)
                    , iconUrl: iconURL
                    })
                })

                if (label != '') {
                    marker.bindLabel(label, { noHide: labelNoHide })
                }
                if (popup != '') {
                    marker.bindPopup(popup, { noHide: false });
                }

                if (layer1 != null) {
                    layer1.addLayer(marker);
                }
                if (layer2 != null) {
                    layer2.addLayer(marker);
                }

                return marker;
            }
            
            function MapShowHideLayer(layer, show, isMarkerLayer) {
                if (show) {
                    if (map.hasLayer(layer) == false) {
                        map.addLayer(layer);
                        if (isMarkerLayer) {
                            mapData.markers.addLayer(layer);
                        }
                    }
                }
                else {
                    if (map.hasLayer(layer) == true) {
                        map.removeLayer(layer);

                        if (isMarkerLayer) {
                            mapData.markers.removeLayer(layer);
                        }
                    }
                }
            }

            function ClearMap() {
                mapData.LayerMarkerOutlet.clearLayers();
                mapData.LayerLineOutlet.clearLayers();
                mapData.LatLongBounds = [];
                mapData.markers.clearLayers();
                map.removeLayer(mapData.LayerMarkerOutlet);
                map.removeLayer(mapData.LayerLineOutlet);
            }
            ////##Map Utility
        </script>
        <script type="text/javascript" >
            //-----------------Outlet Render-----------------//
            function RenderOutletByRoute(routeCD, salesmanID, distributorID) {
                mapData.LatLongBounds = [];
                var strVisitDate = '30-04-2015';
                $.ajax({ //Process the form using $.ajax()
                    type: 'POST', //Method type
                    url: '/Tracking/GetOutletInRoute', //Your form processing file url
                    data: { routeCD: routeCD, salesmanID: salesmanID, distributorID: distributorID, strVisitDate: strVisitDate }, //Forms name
                    dataType: 'json',
                    success: function (data) {
                        //insert vào list outlet để sử dụng cho Popup Info
                        mapData.listOutletInfo = mapData.listOutletInfo.concat(data.html);
                        mapData.listSMInfo = mapData.listSMInfo.concat(data.listSMVisit);
                        mapData.listSSInfo = mapData.listSSInfo.concat(data.listSSVisit);
                        mapData.listASMInfo = mapData.listASMInfo.concat(data.listASMVisit);

                        if (mapData.listRouteInfo == null) {
                            mapData.listRouteInfo = [];
                        }

                        mapData.listRouteInfo.push(data.route);
                        //Render Outlet Marker and Line
                        RenderOutletMarker(data.html, data.route);
                    }
                });
            }

            function RenderOutletMarker(data, routeInfo) {
                MapPanToAndZoom([lat, lng], 16);

                //Render Route
                RenderPolyline(latlngs, routeInfo.RouteID + ' - ' + routeInfo.RouteName, StrRouteInfoPopup(routeInfo), 'blue', mapData.LayerLineOutlet); //RandomColor()
            }

        </script>
    </div>
    <div id="loading" class="loading">
    </div>
</body>
</html>
